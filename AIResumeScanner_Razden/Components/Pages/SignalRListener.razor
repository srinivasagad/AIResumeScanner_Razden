@page "/signalr-test"
@inject IJSRuntime JS

<h3>SignalR Test</h3>

<button class="btn btn-primary" @onclick="TestSignalRConnection">
    Test SignalR Connection
</button>

<ul>
    @foreach (var msg in messages)
    {
        <li>@msg</li>
    }
</ul>

@code {
    private List<string> messages = new();
    private IJSObjectReference? _jsModule;
    private DotNetObjectReference<SignalRListener>? _dotNetRef;

    private async Task TestSignalRConnection()
    {
        _jsModule ??= await JS.InvokeAsync<IJSObjectReference>("import", "./js/signalr-client.js");
        _dotNetRef ??= DotNetObjectReference.Create(this);

        await _jsModule.InvokeVoidAsync("startSignalRConnection",
            "http://localhost:7283/api/negotiate", // your Azure Function's negotiate endpoint
            _dotNetRef
        );
    }

    [JSInvokable]
    public void OnNewMessage(string message)
    {
        messages.Add(message);
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if (_jsModule is not null)
        {
            await _jsModule.InvokeVoidAsync("stopSignalRConnection");
            await _jsModule.DisposeAsync();
        }

        _dotNetRef?.Dispose();
    }
}
